@use 'sass:math';
@import 'reset';

$breakpoint-md: 794;

$very-dark-grayish-blue: hsl(217, 19%, 35%);
$desaturated-dark-blue: hsl(214, 17%, 51%);
$grayish-blue: hsl(212, 23%, 69%);
$light-grayish-blue: hsl(210, 46%, 95%);
$light: #fff;

@function em($value) {
  @if type-of($value) == 'number' {
    @return math.div($value, 16) * 1em;
  } @else {
    @error 'The parameter should be of type number';
  }
}

@mixin md-up {
  @media (min-width: em($breakpoint-md)) {
    @content;
  }
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;
}

body {
  background: $light-grayish-blue;
  font-family: Manrope, sans-serif;
  font-size: 1.6rem;
  letter-spacing: 0.01em;
}

h1 {
  color: $very-dark-grayish-blue;
  font-size: 1.6rem;
  font-weight: 700;
  line-height: 1.5;
  @include md-up {
    font-size: 2rem;
    letter-spacing: 0.012em;
    line-height: 1.4;
  }
}

p {
  color: $desaturated-dark-blue;
  font-size: 1.3rem;
  font-weight: 500;
  line-height: 1.6;
  @include md-up {
    letter-spacing: 0.008em;
  }
}

.wrapper {
  align-items: center;
  display: flex;
  justify-content: center;
  min-height: 100vh;
  padding: 2.4rem;

  > .card {
    max-width: 37.7rem;
    transform: translateY(-0.4rem);
    @include md-up {
      max-width: 73rem;
      transform: none;
      // transform: translateY(-0.4rem);
    }
  }
}

.card {
  background: $light;
  border-radius: 0.8rem;
  box-shadow: 0 4rem 2.8rem rgba($grayish-blue, 0.2);
  display: flex;
  flex-flow: column;
  overflow: hidden;
  @include md-up {
    flex-flow: row;
    overflow: visible;
  }

  &__header {
    height: 0;
    padding-bottom: 61.15%;
    position: relative;
    @include md-up {
      border-bottom-left-radius: 0.8rem;
      border-top-left-radius: 0.8rem;
      flex: 1 0 28.5rem;
      height: auto;
      overflow: hidden;
      padding-bottom: 0;
    }
  }

  &__preview {
    display: block;
    height: 100%;
    left: 0;
    object-fit: cover;
    object-position: 0 -16px;
    position: absolute;
    top: 0;
    width: 100%;
    @include md-up {
      object-position: left;
    }
  }

  &__body {
    padding: 3.6rem 3.2rem 2rem;
    position: relative;
    @include md-up {
      padding: 3.2rem 4rem;
    }

    > p {
      margin-top: 1.2rem;
    }
  }

  &__body > .meta {
    margin-top: 3.2rem;
    @include md-up {
      margin-top: 2rem;
    }
  }
}

.icon-btn {
  align-items: center;
  background: transparent;
  border: 0;
  cursor: pointer;
  display: inline-flex;
  height: 3.2rem;
  justify-content: center;
  padding: 0.4rem;
  transition: transform 0.2s, background-color 0.2s;
  width: 3.2rem;

  > svg > path {
    transition: fill 0.2s;
  }

  &:hover {
    background: $desaturated-dark-blue;
    outline: none;

    > svg > path {
      fill: $light;
    }
  }

  &:active {
    transform: translateY(0.2rem);
  }

  &:focus {
    outline: 0.1rem solid $grayish-blue;
  }
}

.meta {
  align-items: center;
  display: grid;
  font-size: 1.3rem;
  grid-gap: 0.5rem 1.6rem;
  grid-template:
    'avatar name share' auto
    'avatar date share' auto
    / auto 1fr auto;
  line-height: 1.2;

  &__avatar {
    border-radius: 50%;
    grid-area: avatar;
    height: 4rem;
    width: 4rem;
  }

  &__name {
    align-self: end;
    color: $very-dark-grayish-blue;
    font-weight: 700;
    grid-area: name;
  }

  &__date {
    align-self: start;
    color: $grayish-blue;
    font-weight: 500;
    grid-area: date;
  }

  &__share-btn {
    background-color: $light-grayish-blue;
    border-radius: 50%;
    grid-area: share;
    z-index: 10;

    &.inverse {
      background: $desaturated-dark-blue;
    }

    &.inverse > svg > path {
      fill: $light;
    }

    &.inverse:hover {
      background: $light-grayish-blue;
    }

    &.inverse:hover > svg > path {
      fill: $desaturated-dark-blue;
    }
  }
}

.share {
  align-items: center;
  background: $very-dark-grayish-blue;
  bottom: 0;
  display: flex;
  left: 0;
  padding: 2.4rem 3.2rem;
  position: absolute;
  transition: visibility 0s, bottom 0.3s ease-out, opacity 0.3s ease-out;
  width: 100%;
  @include md-up {
    border-radius: 0.8rem;
    bottom: 9.6rem;
    left: auto;
    padding: 1.2rem 3.1rem 1.1rem 3.7rem;
    right: 5.6rem;
    transform: translateX(50%);
    width: auto;

    &::after {
      border-left: 1.2rem solid transparent;
      border-right: 1.2rem solid transparent;
      border-top: 1.2rem solid $very-dark-grayish-blue;
      bottom: -1.2rem;
      content: '';
      left: 50%;
      position: absolute;
      transform: translateX(-50%);
    }
  }

  &.hidden {
    bottom: -8rem;
    opacity: 0;
    transition: visibility 0s 0.3s, bottom 0.3s ease-out, opacity 0.3s ease-out;
    visibility: hidden;
    @include md-up {
      bottom: 8rem;
    }
  }

  &__label {
    color: $grayish-blue;
    font-size: 1.2rem;
    font-weight: 500;
    letter-spacing: 0.48em;
    text-transform: uppercase;
  }

  &__list {
    display: grid;
    grid-auto-flow: column;
    grid-gap: 0.4rem;
    margin-left: 1rem;
  }

  .icon-btn {
    border-radius: 0.6rem;
  }
}
